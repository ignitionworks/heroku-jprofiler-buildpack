#!/bin/bash
# Exit if command fails
set -e
# Exit on unset variables
set -u

build_dir="$1"; shift
cache_dir="$1"; shift
env_dir="$1"; shift

jprofiler_archive_filename="jprofiler_linux_12_0.tar.gz"
jprofiler_archive_sha256_sum="26db0bed385b42cbdb1423c4261679c7a37f6da7fc0e29616fc01c6f1f86f732"
jprofiler_archive_url="https://download-gcdn.ej-technologies.com/jprofiler/$jprofiler_archive_filename"
jprofiler_archive_download_dir="$cache_dir"
jprofiler_archive_download_path="$jprofiler_archive_download_dir/$jprofiler_archive_filename"

jprofiler_destination_dir="$build_dir/jprofiler"

sha256sum_bin="/usr/bin/sha256sum"

# Generate expected checksum digest
echo "$jprofiler_archive_sha256_sum  $jprofiler_archive_download_path" > checksum.sha

# Check shasum256 installed
$sha256sum_bin --version > /dev/null

# Check cache
echo "Checking cache for valid download"
set +e
$sha256sum_bin --check checksum.sha
exit_value="$?"
set -e

echo ""
if [ $exit_value -ne 0 ]
then
  echo "Downloading jprofiler from '$jprofiler_archive_url' to '$jprofiler_archive_download_path'"
  wget --quiet \
       --directory-prefix "$jprofiler_archive_download_dir" \
       "$jprofiler_archive_url"
  $sha256sum_bin --check checksum.sha
else
  echo "Cached archive '$jprofiler_archive_download_path' has correct checksum, skipping download"
fi

echo ""
echo "Extracting JProfiler's profiling agent to application"
mkdir -p "$jprofiler_destination_dir"
tar --extract \
    --file="$jprofiler_archive_download_path" \
    --directory "$jprofiler_destination_dir" \
    --strip-components 1 \
    --exclude demo \
    --exclude api \
    --exclude integrations \
    --exclude doc \
    --exclude config \
    --exclude linux-aarch64 \
    --exclude linux_musl-x64 \
    --exclude linux-x86 \
    --exclude linux-ppc \
    --exclude linux-ppc64 \
    --exclude linux-ppc64le \
    --exclude linux-armhf \
    --exclude lib \
    --exclude .install4j \
    --exclude options
